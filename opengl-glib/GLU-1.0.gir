<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GL" version="1.0"/>
  <include name="GLTypes" version="1.0"/>
  <namespace name="GLU" version="1.0" shared-library="libGLU.so.1">
    <alias name="quadricObj" target="quadric" c:type="GLUquadricObj"/>
    <alias name="triangulatorObj"
           target="tesselator"
           c:type="GLUtriangulatorObj"/>
    <alias name="nurbsObj" target="nurbs" c:type="GLUnurbsObj"/>
    <alias name="tesselatorObj" target="tesselator" c:type="GLUtesselatorObj"/>
    <record name="nurbs" c:type="GLUnurbs">
    </record>
    <record name="quadric" c:type="GLUquadric">
    </record>
    <record name="tesselator" c:type="GLUtesselator">
    </record>
    <callback name="GLUfuncptr" c:type="_GLUfuncptr">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </callback>
    <function name="BeginCurve" c:identifier="gluBeginCurve">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
      </parameters>
    </function>
    <function name="BeginPolygon" c:identifier="gluBeginPolygon">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
      </parameters>
    </function>
    <function name="BeginSurface" c:identifier="gluBeginSurface">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
      </parameters>
    </function>
    <function name="BeginTrim" c:identifier="gluBeginTrim">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
      </parameters>
    </function>
    <function name="Build1DMipmapLevels"
              c:identifier="gluBuild1DMipmapLevels">
      <return-value transfer-ownership="full">
        <type name="GLTypes.int" c:type="GLint"/>
      </return-value>
      <parameters>
        <parameter name="target" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="internalFormat" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="level" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="base" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="max" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
      </parameters>
    </function>
    <function name="Build1DMipmaps" c:identifier="gluBuild1DMipmaps">
      <return-value transfer-ownership="full">
        <type name="GLTypes.int" c:type="GLint"/>
      </return-value>
      <parameters>
        <parameter name="target" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="internalFormat" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
      </parameters>
    </function>
    <function name="Build2DMipmapLevels"
              c:identifier="gluBuild2DMipmapLevels">
      <return-value transfer-ownership="full">
        <type name="GLTypes.int" c:type="GLint"/>
      </return-value>
      <parameters>
        <parameter name="target" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="internalFormat" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="level" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="base" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="max" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
      </parameters>
    </function>
    <function name="Build2DMipmaps" c:identifier="gluBuild2DMipmaps">
      <return-value transfer-ownership="full">
        <type name="GLTypes.int" c:type="GLint"/>
      </return-value>
      <parameters>
        <parameter name="target" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="internalFormat" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
      </parameters>
    </function>
    <function name="Build3DMipmapLevels"
              c:identifier="gluBuild3DMipmapLevels">
      <return-value transfer-ownership="full">
        <type name="GLTypes.int" c:type="GLint"/>
      </return-value>
      <parameters>
        <parameter name="target" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="internalFormat" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="depth" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="level" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="base" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="max" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
      </parameters>
    </function>
    <function name="Build3DMipmaps" c:identifier="gluBuild3DMipmaps">
      <return-value transfer-ownership="full">
        <type name="GLTypes.int" c:type="GLint"/>
      </return-value>
      <parameters>
        <parameter name="target" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="internalFormat" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="depth" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
      </parameters>
    </function>
    <function name="CheckExtension" c:identifier="gluCheckExtension">
      <return-value transfer-ownership="full">
        <type name="GLTypes.boolean" c:type="GLboolean"/>
      </return-value>
      <parameters>
        <parameter name="extName" transfer-ownership="none">
          <type name="GL.ubyte" c:type="GLubyte*"/>
        </parameter>
        <parameter name="extString" transfer-ownership="none">
          <type name="GL.ubyte" c:type="GLubyte*"/>
        </parameter>
      </parameters>
    </function>
    <function name="Cylinder" c:identifier="gluCylinder">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="quad" transfer-ownership="none">
          <type name="quadric" c:type="GLUquadric*"/>
        </parameter>
        <parameter name="base" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="top" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="slices" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="stacks" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
      </parameters>
    </function>
    <function name="DeleteNurbsRenderer"
              c:identifier="gluDeleteNurbsRenderer">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
      </parameters>
    </function>
    <function name="DeleteQuadric" c:identifier="gluDeleteQuadric">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="quad" transfer-ownership="none">
          <type name="quadric" c:type="GLUquadric*"/>
        </parameter>
      </parameters>
    </function>
    <function name="DeleteTess" c:identifier="gluDeleteTess">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
      </parameters>
    </function>
    <function name="Disk" c:identifier="gluDisk">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="quad" transfer-ownership="none">
          <type name="quadric" c:type="GLUquadric*"/>
        </parameter>
        <parameter name="inner" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="outer" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="slices" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="loops" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
      </parameters>
    </function>
    <function name="EndCurve" c:identifier="gluEndCurve">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
      </parameters>
    </function>
    <function name="EndPolygon" c:identifier="gluEndPolygon">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
      </parameters>
    </function>
    <function name="EndSurface" c:identifier="gluEndSurface">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
      </parameters>
    </function>
    <function name="EndTrim" c:identifier="gluEndTrim">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
      </parameters>
    </function>
    <function name="ErrorString" c:identifier="gluErrorString">
      <return-value transfer-ownership="none">
        <type name="GL.ubyte" c:type="GLubyte*"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
      </parameters>
    </function>
    <function name="GetNurbsProperty" c:identifier="gluGetNurbsProperty">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
        <parameter name="property" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="GLTypes.float" c:type="GLfloat*"/>
        </parameter>
      </parameters>
    </function>
    <function name="GetString" c:identifier="gluGetString">
      <return-value transfer-ownership="none">
        <type name="GL.ubyte" c:type="GLubyte*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
      </parameters>
    </function>
    <function name="GetTessProperty" c:identifier="gluGetTessProperty">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
        <parameter name="which" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
      </parameters>
    </function>
    <function name="LoadSamplingMatrices"
              c:identifier="gluLoadSamplingMatrices">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
        <parameter name="model" transfer-ownership="none">
          <type name="GLTypes.float" c:type="GLfloat*"/>
        </parameter>
        <parameter name="perspective" transfer-ownership="none">
          <type name="GLTypes.float" c:type="GLfloat*"/>
        </parameter>
        <parameter name="view" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="LookAt" c:identifier="gluLookAt">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="eyeX" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="eyeY" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="eyeZ" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="centerX" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="centerY" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="centerZ" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="upX" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="upY" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="upZ" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="NewNurbsRenderer" c:identifier="gluNewNurbsRenderer">
      <return-value transfer-ownership="full">
        <type name="nurbs" c:type="GLUnurbs*"/>
      </return-value>
    </function>
    <function name="NewQuadric" c:identifier="gluNewQuadric">
      <return-value transfer-ownership="full">
        <type name="quadric" c:type="GLUquadric*"/>
      </return-value>
    </function>
    <function name="NewTess" c:identifier="gluNewTess">
      <return-value transfer-ownership="full">
        <type name="tesselator" c:type="GLUtesselator*"/>
      </return-value>
    </function>
    <function name="NextContour" c:identifier="gluNextContour">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
      </parameters>
    </function>
    <function name="NurbsCallback" c:identifier="gluNurbsCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
        <parameter name="which" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="CallBackFunc" transfer-ownership="none">
          <type name="GLUfuncptr" c:type="_GLUfuncptr"/>
        </parameter>
      </parameters>
    </function>
    <function name="NurbsCallbackData" c:identifier="gluNurbsCallbackData">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
        <parameter name="userData" transfer-ownership="none">
          <type name="GLTypes.void" c:type="GLvoid*"/>
        </parameter>
      </parameters>
    </function>
    <function name="NurbsCallbackDataEXT"
              c:identifier="gluNurbsCallbackDataEXT">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
        <parameter name="userData" transfer-ownership="none">
          <type name="GLTypes.void" c:type="GLvoid*"/>
        </parameter>
      </parameters>
    </function>
    <function name="NurbsCurve" c:identifier="gluNurbsCurve">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
        <parameter name="knotCount" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="knots" transfer-ownership="none">
          <type name="GLTypes.float" c:type="GLfloat*"/>
        </parameter>
        <parameter name="stride" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="control" transfer-ownership="none">
          <type name="GLTypes.float" c:type="GLfloat*"/>
        </parameter>
        <parameter name="order" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
      </parameters>
    </function>
    <function name="NurbsProperty" c:identifier="gluNurbsProperty">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
        <parameter name="property" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GLTypes.float" c:type="GLfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="NurbsSurface" c:identifier="gluNurbsSurface">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
        <parameter name="sKnotCount" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="sKnots" transfer-ownership="none">
		  <array c:type="GLfloat*">
			<type name="GLTypes.float"/>
		  </array>
        </parameter>
        <parameter name="tKnotCount" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="tKnots" transfer-ownership="none">
		  <array c:type="GLfloat*">
			<type name="GLTypes.float"/>
		  </array>
        </parameter>
        <parameter name="sStride" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="tStride" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="control" transfer-ownership="none">
		  <array c:type="GLfloat*">
			<type name="GLTypes.float"/>
		  </array>
        </parameter>
        <parameter name="sOrder" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="tOrder" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
      </parameters>
    </function>
    <function name="Ortho2D" c:identifier="gluOrtho2D">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="left" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="right" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="bottom" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="top" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="PartialDisk" c:identifier="gluPartialDisk">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="quad" transfer-ownership="none">
          <type name="quadric" c:type="GLUquadric*"/>
        </parameter>
        <parameter name="inner" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="outer" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="slices" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="loops" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="start" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="sweep" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="Perspective" c:identifier="gluPerspective">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="fovy" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="aspect" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="zNear" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="zFar" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="PickMatrix" c:identifier="gluPickMatrix">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="x" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="delX" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="delY" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="viewport" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="Project" c:identifier="gluProject">
      <return-value transfer-ownership="full">
        <type name="GLTypes.int" c:type="GLint"/>
      </return-value>
      <parameters>
        <parameter name="objX" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="objY" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="objZ" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="model" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="proj" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="view" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint*"/>
        </parameter>
        <parameter name="winX" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="winY" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="winZ" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
      </parameters>
    </function>
    <function name="PwlCurve" c:identifier="gluPwlCurve">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="nurb" transfer-ownership="none">
          <type name="nurbs" c:type="GLUnurbs*"/>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="GLTypes.float" c:type="GLfloat*"/>
        </parameter>
        <parameter name="stride" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
      </parameters>
    </function>
    <function name="QuadricCallback" c:identifier="gluQuadricCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="quad" transfer-ownership="none">
          <type name="quadric" c:type="GLUquadric*"/>
        </parameter>
        <parameter name="which" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="CallBackFunc" transfer-ownership="none">
          <type name="GLUfuncptr" c:type="_GLUfuncptr"/>
        </parameter>
      </parameters>
    </function>
    <function name="QuadricDrawStyle" c:identifier="gluQuadricDrawStyle">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="quad" transfer-ownership="none">
          <type name="quadric" c:type="GLUquadric*"/>
        </parameter>
        <parameter name="draw" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
      </parameters>
    </function>
    <function name="QuadricNormals" c:identifier="gluQuadricNormals">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="quad" transfer-ownership="none">
          <type name="quadric" c:type="GLUquadric*"/>
        </parameter>
        <parameter name="normal" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
      </parameters>
    </function>
    <function name="QuadricOrientation"
              c:identifier="gluQuadricOrientation">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="quad" transfer-ownership="none">
          <type name="quadric" c:type="GLUquadric*"/>
        </parameter>
        <parameter name="orientation" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
      </parameters>
    </function>
    <function name="QuadricTexture" c:identifier="gluQuadricTexture">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="quad" transfer-ownership="none">
          <type name="quadric" c:type="GLUquadric*"/>
        </parameter>
        <parameter name="texture" transfer-ownership="none">
          <type name="GLTypes.boolean" c:type="GLboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="ScaleImage" c:identifier="gluScaleImage">
      <return-value transfer-ownership="full">
        <type name="GLTypes.int" c:type="GLint"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="wIn" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="hIn" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="typeIn" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="dataIn" transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </parameter>
        <parameter name="wOut" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="hOut" transfer-ownership="none">
          <type name="GL.sizei" c:type="GLsizei"/>
        </parameter>
        <parameter name="typeOut" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="dataOut" transfer-ownership="none">
          <type name="GLTypes.void" c:type="GLvoid*"/>
        </parameter>
      </parameters>
    </function>
    <function name="Sphere" c:identifier="gluSphere">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="quad" transfer-ownership="none">
          <type name="quadric" c:type="GLUquadric*"/>
        </parameter>
        <parameter name="radius" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="slices" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
        <parameter name="stacks" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint"/>
        </parameter>
      </parameters>
    </function>
    <function name="TessBeginContour" c:identifier="gluTessBeginContour">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
      </parameters>
    </function>
    <function name="TessBeginPolygon" c:identifier="gluTessBeginPolygon">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="GLTypes.void" c:type="GLvoid*"/>
        </parameter>
      </parameters>
    </function>
    <function name="TessCallback" c:identifier="gluTessCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
        <parameter name="which" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="CallBackFunc" transfer-ownership="none">
          <type name="GLUfuncptr" c:type="_GLUfuncptr"/>
        </parameter>
      </parameters>
    </function>
    <function name="TessEndContour" c:identifier="gluTessEndContour">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
      </parameters>
    </function>
    <function name="TessEndPolygon" c:identifier="gluTessEndPolygon">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
      </parameters>
    </function>
    <function name="TessNormal" c:identifier="gluTessNormal">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
        <parameter name="valueX" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="valueY" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="valueZ" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="TessProperty" c:identifier="gluTessProperty">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
        <parameter name="which" transfer-ownership="none">
          <type name="GL.enum" c:type="GLenum"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="TessVertex" c:identifier="gluTessVertex">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tess" transfer-ownership="none">
          <type name="tesselator" c:type="GLUtesselator*"/>
        </parameter>
        <parameter name="location" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="GLTypes.void" c:type="GLvoid*"/>
        </parameter>
      </parameters>
    </function>
    <function name="UnProject" c:identifier="gluUnProject">
      <return-value transfer-ownership="full">
        <type name="GLTypes.int" c:type="GLint"/>
      </return-value>
      <parameters>
        <parameter name="winX" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="winY" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="winZ" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="model" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="proj" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="view" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint*"/>
        </parameter>
        <parameter name="objX" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="objY" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="objZ" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
      </parameters>
    </function>
    <function name="UnProject4" c:identifier="gluUnProject4">
      <return-value transfer-ownership="full">
        <type name="GLTypes.int" c:type="GLint"/>
      </return-value>
      <parameters>
        <parameter name="winX" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="winY" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="winZ" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="clipW" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="model" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="proj" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="view" transfer-ownership="none">
          <type name="GLTypes.int" c:type="GLint*"/>
        </parameter>
        <parameter name="nearVal" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="farVal" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble"/>
        </parameter>
        <parameter name="objX" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="objY" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="objZ" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
        <parameter name="objW" transfer-ownership="none">
          <type name="GLTypes.double" c:type="GLdouble*"/>
        </parameter>
      </parameters>
    </function>
    <constant name="EXT_object_space_tess" value="1">
      <type name="int"/>
    </constant>
    <constant name="EXT_nurbs_tessellator" value="1">
      <type name="int"/>
    </constant>
    <constant name="FALSE" value="0">
      <type name="int"/>
    </constant>
    <constant name="TRUE" value="1">
      <type name="int"/>
    </constant>
    <constant name="VERSION_1_1" value="1">
      <type name="int"/>
    </constant>
    <constant name="VERSION_1_2" value="1">
      <type name="int"/>
    </constant>
    <constant name="VERSION_1_3" value="1">
      <type name="int"/>
    </constant>
    <constant name="VERSION" value="100800">
      <type name="int"/>
    </constant>
    <constant name="EXTENSIONS" value="100801">
      <type name="int"/>
    </constant>
    <constant name="INVALID_ENUM" value="100900">
      <type name="int"/>
    </constant>
    <constant name="INVALID_VALUE" value="100901">
      <type name="int"/>
    </constant>
    <constant name="OUT_OF_MEMORY" value="100902">
      <type name="int"/>
    </constant>
    <constant name="INCOMPATIBLE_GL_VERSION" value="100903">
      <type name="int"/>
    </constant>
    <constant name="INVALID_OPERATION" value="100904">
      <type name="int"/>
    </constant>
    <constant name="OUTLINE_POLYGON" value="100240">
      <type name="int"/>
    </constant>
    <constant name="OUTLINE_PATCH" value="100241">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR" value="100103">
      <type name="int"/>
    </constant>
    <constant name="ERROR" value="100103">
      <type name="int"/>
    </constant>
    <constant name="NURBS_BEGIN" value="100164">
      <type name="int"/>
    </constant>
    <constant name="NURBS_BEGIN_EXT" value="100164">
      <type name="int"/>
    </constant>
    <constant name="NURBS_VERTEX" value="100165">
      <type name="int"/>
    </constant>
    <constant name="NURBS_VERTEX_EXT" value="100165">
      <type name="int"/>
    </constant>
    <constant name="NURBS_NORMAL" value="100166">
      <type name="int"/>
    </constant>
    <constant name="NURBS_NORMAL_EXT" value="100166">
      <type name="int"/>
    </constant>
    <constant name="NURBS_COLOR" value="100167">
      <type name="int"/>
    </constant>
    <constant name="NURBS_COLOR_EXT" value="100167">
      <type name="int"/>
    </constant>
    <constant name="NURBS_TEXTURE_COORD" value="100168">
      <type name="int"/>
    </constant>
    <constant name="NURBS_TEX_COORD_EXT" value="100168">
      <type name="int"/>
    </constant>
    <constant name="NURBS_END" value="100169">
      <type name="int"/>
    </constant>
    <constant name="NURBS_END_EXT" value="100169">
      <type name="int"/>
    </constant>
    <constant name="NURBS_BEGIN_DATA" value="100170">
      <type name="int"/>
    </constant>
    <constant name="NURBS_BEGIN_DATA_EXT" value="100170">
      <type name="int"/>
    </constant>
    <constant name="NURBS_VERTEX_DATA" value="100171">
      <type name="int"/>
    </constant>
    <constant name="NURBS_VERTEX_DATA_EXT" value="100171">
      <type name="int"/>
    </constant>
    <constant name="NURBS_NORMAL_DATA" value="100172">
      <type name="int"/>
    </constant>
    <constant name="NURBS_NORMAL_DATA_EXT" value="100172">
      <type name="int"/>
    </constant>
    <constant name="NURBS_COLOR_DATA" value="100173">
      <type name="int"/>
    </constant>
    <constant name="NURBS_COLOR_DATA_EXT" value="100173">
      <type name="int"/>
    </constant>
    <constant name="NURBS_TEXTURE_COORD_DATA" value="100174">
      <type name="int"/>
    </constant>
    <constant name="NURBS_TEX_COORD_DATA_EXT" value="100174">
      <type name="int"/>
    </constant>
    <constant name="NURBS_END_DATA" value="100175">
      <type name="int"/>
    </constant>
    <constant name="NURBS_END_DATA_EXT" value="100175">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR1" value="100251">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR2" value="100252">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR3" value="100253">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR4" value="100254">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR5" value="100255">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR6" value="100256">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR7" value="100257">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR8" value="100258">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR9" value="100259">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR10" value="100260">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR11" value="100261">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR12" value="100262">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR13" value="100263">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR14" value="100264">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR15" value="100265">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR16" value="100266">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR17" value="100267">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR18" value="100268">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR19" value="100269">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR20" value="100270">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR21" value="100271">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR22" value="100272">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR23" value="100273">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR24" value="100274">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR25" value="100275">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR26" value="100276">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR27" value="100277">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR28" value="100278">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR29" value="100279">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR30" value="100280">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR31" value="100281">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR32" value="100282">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR33" value="100283">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR34" value="100284">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR35" value="100285">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR36" value="100286">
      <type name="int"/>
    </constant>
    <constant name="NURBS_ERROR37" value="100287">
      <type name="int"/>
    </constant>
    <constant name="AUTO_LOAD_MATRIX" value="100200">
      <type name="int"/>
    </constant>
    <constant name="CULLING" value="100201">
      <type name="int"/>
    </constant>
    <constant name="SAMPLING_TOLERANCE" value="100203">
      <type name="int"/>
    </constant>
    <constant name="DISPLAY_MODE" value="100204">
      <type name="int"/>
    </constant>
    <constant name="PARAMETRIC_TOLERANCE" value="100202">
      <type name="int"/>
    </constant>
    <constant name="SAMPLING_METHOD" value="100205">
      <type name="int"/>
    </constant>
    <constant name="U_STEP" value="100206">
      <type name="int"/>
    </constant>
    <constant name="V_STEP" value="100207">
      <type name="int"/>
    </constant>
    <constant name="NURBS_MODE" value="100160">
      <type name="int"/>
    </constant>
    <constant name="NURBS_MODE_EXT" value="100160">
      <type name="int"/>
    </constant>
    <constant name="NURBS_TESSELLATOR" value="100161">
      <type name="int"/>
    </constant>
    <constant name="NURBS_TESSELLATOR_EXT" value="100161">
      <type name="int"/>
    </constant>
    <constant name="NURBS_RENDERER" value="100162">
      <type name="int"/>
    </constant>
    <constant name="NURBS_RENDERER_EXT" value="100162">
      <type name="int"/>
    </constant>
    <constant name="OBJECT_PARAMETRIC_ERROR" value="100208">
      <type name="int"/>
    </constant>
    <constant name="OBJECT_PARAMETRIC_ERROR_EXT" value="100208">
      <type name="int"/>
    </constant>
    <constant name="OBJECT_PATH_LENGTH" value="100209">
      <type name="int"/>
    </constant>
    <constant name="OBJECT_PATH_LENGTH_EXT" value="100209">
      <type name="int"/>
    </constant>
    <constant name="PATH_LENGTH" value="100215">
      <type name="int"/>
    </constant>
    <constant name="PARAMETRIC_ERROR" value="100216">
      <type name="int"/>
    </constant>
    <constant name="DOMAIN_DISTANCE" value="100217">
      <type name="int"/>
    </constant>
    <constant name="MAP1_TRIM_2" value="100210">
      <type name="int"/>
    </constant>
    <constant name="MAP1_TRIM_3" value="100211">
      <type name="int"/>
    </constant>
    <constant name="POINT" value="100010">
      <type name="int"/>
    </constant>
    <constant name="LINE" value="100011">
      <type name="int"/>
    </constant>
    <constant name="FILL" value="100012">
      <type name="int"/>
    </constant>
    <constant name="SILHOUETTE" value="100013">
      <type name="int"/>
    </constant>
    <constant name="SMOOTH" value="100000">
      <type name="int"/>
    </constant>
    <constant name="FLAT" value="100001">
      <type name="int"/>
    </constant>
    <constant name="NONE" value="100002">
      <type name="int"/>
    </constant>
    <constant name="OUTSIDE" value="100020">
      <type name="int"/>
    </constant>
    <constant name="INSIDE" value="100021">
      <type name="int"/>
    </constant>
    <constant name="TESS_BEGIN" value="100100">
      <type name="int"/>
    </constant>
    <constant name="BEGIN" value="100100">
      <type name="int"/>
    </constant>
    <constant name="TESS_VERTEX" value="100101">
      <type name="int"/>
    </constant>
    <constant name="VERTEX" value="100101">
      <type name="int"/>
    </constant>
    <constant name="TESS_END" value="100102">
      <type name="int"/>
    </constant>
    <constant name="END" value="100102">
      <type name="int"/>
    </constant>
    <constant name="TESS_ERROR" value="100103">
      <type name="int"/>
    </constant>
    <constant name="TESS_EDGE_FLAG" value="100104">
      <type name="int"/>
    </constant>
    <constant name="EDGE_FLAG" value="100104">
      <type name="int"/>
    </constant>
    <constant name="TESS_COMBINE" value="100105">
      <type name="int"/>
    </constant>
    <constant name="TESS_BEGIN_DATA" value="100106">
      <type name="int"/>
    </constant>
    <constant name="TESS_VERTEX_DATA" value="100107">
      <type name="int"/>
    </constant>
    <constant name="TESS_END_DATA" value="100108">
      <type name="int"/>
    </constant>
    <constant name="TESS_ERROR_DATA" value="100109">
      <type name="int"/>
    </constant>
    <constant name="TESS_EDGE_FLAG_DATA" value="100110">
      <type name="int"/>
    </constant>
    <constant name="TESS_COMBINE_DATA" value="100111">
      <type name="int"/>
    </constant>
    <constant name="CW" value="100120">
      <type name="int"/>
    </constant>
    <constant name="CCW" value="100121">
      <type name="int"/>
    </constant>
    <constant name="INTERIOR" value="100122">
      <type name="int"/>
    </constant>
    <constant name="EXTERIOR" value="100123">
      <type name="int"/>
    </constant>
    <constant name="UNKNOWN" value="100124">
      <type name="int"/>
    </constant>
    <constant name="TESS_WINDING_RULE" value="100140">
      <type name="int"/>
    </constant>
    <constant name="TESS_BOUNDARY_ONLY" value="100141">
      <type name="int"/>
    </constant>
    <constant name="TESS_TOLERANCE" value="100142">
      <type name="int"/>
    </constant>
    <constant name="TESS_ERROR1" value="100151">
      <type name="int"/>
    </constant>
    <constant name="TESS_ERROR2" value="100152">
      <type name="int"/>
    </constant>
    <constant name="TESS_ERROR3" value="100153">
      <type name="int"/>
    </constant>
    <constant name="TESS_ERROR4" value="100154">
      <type name="int"/>
    </constant>
    <constant name="TESS_ERROR5" value="100155">
      <type name="int"/>
    </constant>
    <constant name="TESS_ERROR6" value="100156">
      <type name="int"/>
    </constant>
    <constant name="TESS_ERROR7" value="100157">
      <type name="int"/>
    </constant>
    <constant name="TESS_ERROR8" value="100158">
      <type name="int"/>
    </constant>
    <constant name="TESS_MISSING_BEGIN_POLYGON" value="100151">
      <type name="int"/>
    </constant>
    <constant name="TESS_MISSING_BEGIN_CONTOUR" value="100152">
      <type name="int"/>
    </constant>
    <constant name="TESS_MISSING_END_POLYGON" value="100153">
      <type name="int"/>
    </constant>
    <constant name="TESS_MISSING_END_CONTOUR" value="100154">
      <type name="int"/>
    </constant>
    <constant name="TESS_COORD_TOO_LARGE" value="100155">
      <type name="int"/>
    </constant>
    <constant name="TESS_NEED_COMBINE_CALLBACK" value="100156">
      <type name="int"/>
    </constant>
    <constant name="TESS_WINDING_ODD" value="100130">
      <type name="int"/>
    </constant>
    <constant name="TESS_WINDING_NONZERO" value="100131">
      <type name="int"/>
    </constant>
    <constant name="TESS_WINDING_POSITIVE" value="100132">
      <type name="int"/>
    </constant>
    <constant name="TESS_WINDING_NEGATIVE" value="100133">
      <type name="int"/>
    </constant>
    <constant name="TESS_WINDING_ABS_GEQ_TWO" value="100134">
      <type name="int"/>
    </constant>
  </namespace>
</repository>
